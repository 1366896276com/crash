The logging commands provide useful interactions with the JVM logging system.

== Listing all loggers ==

The ##logls## command lists all the loggers available.

{{screen}}
% logls
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/].[default]
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/eXoGadgetServer].[concat]
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/dashboard].[jsp]
...
{{/screen}}

The ##-f## switch provides filtering with a regular expression.

{{screen}}
% logls -f javax.*
javax.management.mbeanserver
javax.management.modelmbean
{{/screen}}

The ##logls## command is a ##<Void,Logger>## command and so any logger produced can be consumed.

== Displaying information about a logger ==

The ##loginfo## command displays information about one or several loggers.

{{screen}}
% loginfo javax.management.modelmbean
javax.management.modelmbean<INFO>
{{/screen}}

The ##loginfo## command is a <Logger,Void> command and it can consumed logger produced by the logls command.

{{screen}}
% logls -f javax.* | loginfo
javax.management.mbeanserver<INFO>
javax.management.modelmbean<INFO>
{{/screen}}

== Updating a logger level ==

The ##logset##  command sets the level of a logger. One or several logger names can be specified as arguments
and the ##-l## option specify the level among the //trace//, //debug//, //info//, //warn// and //error// levels.

{{screen}}
% logset -l trace foo
{{/screen}}

When no level is specified, the level is cleared and the level will be inherited from its ancestors.

{{screen}}
% logset foo
{{/screen}}

The logger name can be omitted and instead stream of logger can be consumed as it is a ##<Logger,Void>## command.
The following set the level //warn// on all the available loggers.

{{screen}}
% logls | logset -l warn
{{/screen}}

