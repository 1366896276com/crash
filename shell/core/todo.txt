- investigate using one classloader per plugin
- think about replacing VFS by http://code.google.com/p/reflections/wiki/JBossIntegration that integrates with JBoss VFS
- Interesting db shell : http://ewaters.github.com/altsql-shell/
- decouple connectors from instantiating CRaSH and instead use a shell factory
- look about remote attaching : http://code.alibabatech.com/blog/dev_related_986/jvm-attach-api-introducation-and-practice.html
- try to have ShellProcess#cancel():void -> ShellProcess#cancel():ShellResponse to give an opportunity to return something
- have a write/flush method similar to readLine() and retrofit ShellResponse.Display -> write/flush
- propagage cancel() to the groovy command to give an opportunity to close a resource
- JDBC command : provide completion for JNDI names when possible
- thread ls : use thread group to display hierachical
- ctrl e / ctrl d
- @Option(password = true)
- perform more on too high completion results
- investigate https://code.google.com/p/sshxcute/ an java ssh client for ssh unit testing
- seems intersting for packaging http://one-jar.sourceforge.net/index.php?page=introduction&file=background
- write AbstractTerm unit tests
- write IO tests
- write pipe consistency
- more Conversion, for instance String -> JCR node from current session
- ability to describe a meta argument like, maybe just a convention with "description" is fine
@Option(names=["l","level"],completer=org.crsh.cmdline.EnumCompleter)
@interface LevelOpt {
  String description() default "";
}

